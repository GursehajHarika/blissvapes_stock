
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  shop: 'shop',
  state: 'state',
  isOnline: 'isOnline',
  scope: 'scope',
  expires: 'expires',
  accessToken: 'accessToken',
  userId: 'userId',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  accountOwner: 'accountOwner',
  locale: 'locale',
  collaborator: 'collaborator',
  emailVerified: 'emailVerified'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  shopifyGid: 'shopifyGid',
  handle: 'handle',
  title: 'title',
  vendor: 'vendor',
  productType: 'productType',
  status: 'status',
  tagsCsv: 'tagsCsv',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  publishedAt: 'publishedAt'
};

exports.Prisma.ProductVariantScalarFieldEnum = {
  id: 'id',
  shopifyGid: 'shopifyGid',
  inventoryItemGid: 'inventoryItemGid',
  legacyId: 'legacyId',
  productId: 'productId',
  title: 'title',
  sku: 'sku',
  price: 'price',
  compareAtPrice: 'compareAtPrice',
  position: 'position',
  availableForSale: 'availableForSale',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VariantInventoryLevelScalarFieldEnum = {
  id: 'id',
  variantId: 'variantId',
  locationGid: 'locationGid',
  locationName: 'locationName',
  available: 'available'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  shop: 'shop',
  staffId: 'staffId',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  email: 'email',
  name: 'name'
};

exports.Prisma.PhysicalCountScalarFieldEnum = {
  id: 'id',
  variantId: 'variantId',
  userId: 'userId',
  counted: 'counted',
  note: 'note',
  createdAt: 'createdAt'
};

exports.Prisma.SaleEventScalarFieldEnum = {
  id: 'id',
  variantId: 'variantId',
  quantity: 'quantity',
  occurredAt: 'occurredAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Session: 'Session',
  Product: 'Product',
  ProductVariant: 'ProductVariant',
  VariantInventoryLevel: 'VariantInventoryLevel',
  User: 'User',
  PhysicalCount: 'PhysicalCount',
  SaleEvent: 'SaleEvent'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/gursehajharika/Desktop/Work /Shopify_app/bliss-vapes-stock-check/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/gursehajharika/Desktop/Work /Shopify_app/bliss-vapes-stock-check/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": null,
        "value": "file:dev.sqlite"
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\n// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long\n// enough when changing adapters.\n// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information\ndatasource db {\n  provider = \"sqlite\"\n  url      = \"file:dev.sqlite\"\n}\n\nmodel Session {\n  id            String    @id\n  shop          String\n  state         String\n  isOnline      Boolean   @default(false)\n  scope         String?\n  expires       DateTime?\n  accessToken   String\n  userId        BigInt?\n  firstName     String?\n  lastName      String?\n  email         String?\n  accountOwner  Boolean   @default(false)\n  locale        String?\n  collaborator  Boolean?  @default(false)\n  emailVerified Boolean?  @default(false)\n}\n\nmodel Product {\n  id          String           @id @default(cuid())\n  shopifyGid  String           @unique\n  handle      String\n  title       String\n  vendor      String?\n  productType String?\n  status      String?\n  tagsCsv     String?\n  createdAt   DateTime\n  updatedAt   DateTime\n  publishedAt DateTime?\n  variants    ProductVariant[]\n}\n\nmodel ProductVariant {\n  id               String   @id @default(cuid())\n  shopifyGid       String   @unique\n  inventoryItemGid String?  @unique\n  legacyId         BigInt?\n  product          Product  @relation(fields: [productId], references: [id], onDelete: Cascade)\n  productId        String\n  title            String?\n  sku              String?\n  price            Decimal\n  compareAtPrice   Decimal?\n  position         Int?\n  availableForSale Boolean?\n  createdAt        DateTime\n  updatedAt        DateTime\n\n  inventoryLevels VariantInventoryLevel[]\n  counts          PhysicalCount[]         @relation(name: \"VariantCounts\")\n  saleEvents      SaleEvent[]             @relation(\"VariantToSaleEvents\")\n}\n\nmodel VariantInventoryLevel {\n  id           String         @id @default(cuid())\n  variant      ProductVariant @relation(fields: [variantId], references: [id], onDelete: Cascade)\n  variantId    String\n  locationGid  String\n  locationName String\n  available    Int\n\n  @@index([variantId])\n}\n\nmodel User {\n  id String @id @default(cuid())\n\n  shop      String\n  staffId   String   @unique\n  role      String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  email String? @unique\n  name  String?\n\n  counts PhysicalCount[]\n\n  @@index([shop])\n}\n\nmodel PhysicalCount {\n  id        String   @id @default(cuid())\n  variantId String\n  userId    String?\n  counted   Int\n  note      String?\n  createdAt DateTime @default(now())\n\n  variant ProductVariant @relation(\"VariantCounts\", fields: [variantId], references: [id], onDelete: Cascade)\n  user    User?          @relation(fields: [userId], references: [id])\n\n  @@index([variantId, createdAt])\n}\n\nmodel SaleEvent {\n  id         String         @id @default(cuid())\n  variant    ProductVariant @relation(\"VariantToSaleEvents\", fields: [variantId], references: [id], onDelete: Cascade)\n  variantId  String\n  quantity   Int // positive for sold, negative if you later support returns\n  occurredAt DateTime       @default(now())\n\n  @@index([variantId, occurredAt])\n}\n",
  "inlineSchemaHash": "f0af5952d51e0dfb994f9813b89e87d1562bdf3e54b28f6ee98788a4609cf8b0",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shop\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isOnline\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"accessToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountOwner\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"locale\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"collaborator\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shopifyGid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"handle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vendor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tagsCsv\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"publishedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"variants\",\"kind\":\"object\",\"type\":\"ProductVariant\",\"relationName\":\"ProductToProductVariant\"}],\"dbName\":null},\"ProductVariant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shopifyGid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"inventoryItemGid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"legacyId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductVariant\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"compareAtPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"availableForSale\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"inventoryLevels\",\"kind\":\"object\",\"type\":\"VariantInventoryLevel\",\"relationName\":\"ProductVariantToVariantInventoryLevel\"},{\"name\":\"counts\",\"kind\":\"object\",\"type\":\"PhysicalCount\",\"relationName\":\"VariantCounts\"},{\"name\":\"saleEvents\",\"kind\":\"object\",\"type\":\"SaleEvent\",\"relationName\":\"VariantToSaleEvents\"}],\"dbName\":null},\"VariantInventoryLevel\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variant\",\"kind\":\"object\",\"type\":\"ProductVariant\",\"relationName\":\"ProductVariantToVariantInventoryLevel\"},{\"name\":\"variantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"locationGid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"locationName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"available\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shop\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"staffId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"counts\",\"kind\":\"object\",\"type\":\"PhysicalCount\",\"relationName\":\"PhysicalCountToUser\"}],\"dbName\":null},\"PhysicalCount\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"counted\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"variant\",\"kind\":\"object\",\"type\":\"ProductVariant\",\"relationName\":\"VariantCounts\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PhysicalCountToUser\"}],\"dbName\":null},\"SaleEvent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variant\",\"kind\":\"object\",\"type\":\"ProductVariant\",\"relationName\":\"VariantToSaleEvents\"},{\"name\":\"variantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"occurredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {}
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

